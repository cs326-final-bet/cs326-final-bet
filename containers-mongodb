#!/usr/bin/env bash
# $1 = command to run, commands:
# - start: start Mongo container
# - status: get status of container, outputs "running" if Mongo server is running,
#           "stopped" if the Mongo container is stopped but still exists, and
#           "not found" if the Mongo container does not exist.
if [ -z "$CONTAINER_CLI" ]; then
    CONTAINER_CLI="sudo podman"
fi

container_name=dev-umass-cs-326-final-mongo
container_tag="mongo:latest"

function die() {
    echo "mongo: $@" >&2
    exit 1
}

case "$1" in
    start)
	   case $($0 status) in
		  running) die "already running" ;;
		  stopped) $CONTAINER_CLI start "$container_name" ;;
		  "not found") $CONTAINER_CLI run -d --net host --name "$container_name" "$container_tag" ;;
	   esac
	   ;;
    status)
	   if $CONTAINER_CLI ps | grep "$container_name" &> /dev/null; then
		  echo "running"
	   elif $CONTAINER_CLI ps -a | grep "$container_name" &> /dev/null; then
		  echo "stopped"
	   else
		  echo "not found"
	   fi
	   ;;
    stop)
	   case $($0 status) in
		  running)
			 $CONTAINER_CLI stop "$container_name"
			 $CONTAINER_CLI rm "$container_name"
			 ;;
		  stopped)
			 $CONTAINER_CLI rm "$container_name"
			 ;;
		  *) die "Cannot stop and remove mongo if not running" ;;
	   esac
	   ;;
    logs)
	   case $($0 status) in
		  running)
			 $CONTAINER_CLI logs -f "$container_name"
			 ;;
		  *) die "Cannot get logs if Mongo is not running" ;;
	   esac
	   ;;
    cli)
	   shift
	   $CONTAINER_CLI run -it --rm --net host "$container_tag" mongo $@
	   ;;
    *)
	   die "first argument must be \"start\", \"status\", \"stop\", \"logs\", \"cli\""
	   ;;
esac
